<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hampus Sandén</title>
    <link>https://hampussanden.com/</link>
    <description>Recent content on Hampus Sandén</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 May 2019 00:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://hampussanden.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ping Website</title>
      <link>https://hampussanden.com/linux/basics/ping_website/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 -0700</pubDate>
      
      <guid>https://hampussanden.com/linux/basics/ping_website/</guid>
      <description>Linux makes it easy to ping a website to test connectivity and/or whether the website is live. Once executed, ping will ping the website until it is stopped by pressing ctrl-C.
Ping Google.com ping google.com PING google.com (216.58.211.142) 56(84) bytes of data. 64 bytes from arn09s10-in-f142.1e100.net (216.58.211.142): icmp_seq=1 ttl=56 time=8.90 ms 64 bytes from arn09s10-in-f142.1e100.net (216.58.211.142): icmp_seq=2 ttl=56 time=12.9 ms 64 bytes from arn09s10-in-f142.1e100.net (216.58.211.142): icmp_seq=3 ttl=56 time=9.08 ms 64 bytes from arn09s10-in-f142.</description>
    </item>
    
    <item>
      <title>Exploratory Analysis Of The Swedish Housing Market With Python</title>
      <link>https://hampussanden.com/articles/exploratory_analysis_of_the_swedish_housing_market/</link>
      <pubDate>Wed, 01 May 2019 10:51:49 +0200</pubDate>
      
      <guid>https://hampussanden.com/articles/exploratory_analysis_of_the_swedish_housing_market/</guid>
      <description>import os import pandas as pd import numpy as npraw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;last_name&amp;#39;: [&amp;#39;Miller&amp;#39;, &amp;#39;Jacobson&amp;#39;, &amp;#34;.&amp;#34;, &amp;#39;Milner&amp;#39;, &amp;#39;Cooze&amp;#39;], &amp;#39;age&amp;#39;: [42, 52, 36, 24, 73], &amp;#39;preTestScore&amp;#39;: [4, 24, 31, &amp;#34;.&amp;#34;, &amp;#34;.&amp;#34;], &amp;#39;postTestScore&amp;#39;: [&amp;#34;25,000&amp;#34;, &amp;#34;94,000&amp;#34;, 57, 62, 70]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;last_name&amp;#39;, &amp;#39;age&amp;#39;, &amp;#39;preTestScore&amp;#39;, &amp;#39;postTestScore&amp;#39;]) df.head() .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }    first_name last_name age preTestScore postTestScore     0 Jason Miller 42 4 25,000   1 Molly Jacobson 52 24 94,000   2 Tina .</description>
    </item>
    
    <item>
      <title>About Hampus Sandén</title>
      <link>https://hampussanden.com/about/hampus_sanden/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://hampussanden.com/about/hampus_sanden/</guid>
      <description>About Hampus Sandén My name is Hampus Sandén and i&amp;rsquo;m partner and co-founder of a digital marketing agency called 56K digital. I work as a data analyst where my main area of expertise is the Google Marketing Platform stack and Google Cloud products.
I grew up in a small town in southern Sweden called Kristianstad and have a background in digital marketing and web development. I’ve been programming actively since 2008, and I built my first website/blog that same year.</description>
    </item>
    
    <item>
      <title>Applying Functions To List Items</title>
      <link>https://hampussanden.com/python/basics/applying_functions_to_list_items/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://hampussanden.com/python/basics/applying_functions_to_list_items/</guid>
      <description>Create a list of regiment names regimentNames = [&amp;#39;Night Riflemen&amp;#39;, &amp;#39;Jungle Scouts&amp;#39;, &amp;#39;The Dragoons&amp;#39;, &amp;#39;Midnight Revengence&amp;#39;, &amp;#39;Wily Warriors&amp;#39;] Using A For Loop Create a for loop goes through the list and capitalizes each # create a variable for the for loop results regimentNamesCapitalized_f = [] # for every item in regimentNames for i in regimentNames: # capitalize the item and add it to regimentNamesCapitalized_f regimentNamesCapitalized_f.append(i.upper()) # View the outcome regimentNamesCapitalized_f [&#39;NIGHT RIFLEMEN&#39;, &#39;JUNGLE SCOUTS&#39;, &#39;THE DRAGOONS&#39;, &#39;MIDNIGHT REVENGENCE&#39;, &#39;WILY WARRIORS&#39;]  Using Map() Create a lambda function that capitalizes x capitalizer = lambda x: x.</description>
    </item>
    
    <item>
      <title>Fixing messy columns names the easy way with pandas</title>
      <link>https://hampussanden.com/python/data_wrangling/pandas_cleaning_up_messy_columns/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://hampussanden.com/python/data_wrangling/pandas_cleaning_up_messy_columns/</guid>
      <description>Cleaning up messy columns Import modules import pandas as pd import re Load sample data df = pd.read_html(&amp;#39;http://www.fasttrack.co.uk/league-tables/tech-track-100/league-table/&amp;#39; , header=0)[0]df.head()  .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; }    Rank Company Location Year end Annual sales rise over 3 years Latest sales £000s Staff Comment     0 1 Plan.</description>
    </item>
    
    <item>
      <title>Loading A CSV Into pandas</title>
      <link>https://hampussanden.com/python/data_wrangling/pandas_dataframe_importing_csv/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://hampussanden.com/python/data_wrangling/pandas_dataframe_importing_csv/</guid>
      <description>import modules import pandas as pd import numpy as np Create dataframe (that we will be importing) raw_data = {&amp;#39;first_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;last_name&amp;#39;: [&amp;#39;Miller&amp;#39;, &amp;#39;Jacobson&amp;#39;, &amp;#34;.&amp;#34;, &amp;#39;Milner&amp;#39;, &amp;#39;Cooze&amp;#39;], &amp;#39;age&amp;#39;: [42, 52, 36, 24, 73], &amp;#39;preTestScore&amp;#39;: [4, 24, 31, &amp;#34;.&amp;#34;, &amp;#34;.&amp;#34;], &amp;#39;postTestScore&amp;#39;: [&amp;#34;25,000&amp;#34;, &amp;#34;94,000&amp;#34;, 57, 62, 70]} df = pd.DataFrame(raw_data, columns = [&amp;#39;first_name&amp;#39;, &amp;#39;last_name&amp;#39;, &amp;#39;age&amp;#39;, &amp;#39;preTestScore&amp;#39;, &amp;#39;postTestScore&amp;#39;]) df   .dataframe thead tr:only-child th { text-align: right; } .</description>
    </item>
    
    <item>
      <title>Pie Chart In MatPlotLib</title>
      <link>https://hampussanden.com/python/data_visualisation/matplotlib_pie_chart/</link>
      <pubDate>Wed, 20 Dec 2017 11:53:49 -0700</pubDate>
      
      <guid>https://hampussanden.com/python/data_visualisation/matplotlib_pie_chart/</guid>
      <description>Preliminaries %matplotlib inline import pandas as pd import matplotlib.pyplot as plt Create dataframe raw_data = {&amp;#39;officer_name&amp;#39;: [&amp;#39;Jason&amp;#39;, &amp;#39;Molly&amp;#39;, &amp;#39;Tina&amp;#39;, &amp;#39;Jake&amp;#39;, &amp;#39;Amy&amp;#39;], &amp;#39;jan_arrests&amp;#39;: [4, 24, 31, 2, 3], &amp;#39;feb_arrests&amp;#39;: [25, 94, 57, 62, 70], &amp;#39;march_arrests&amp;#39;: [5, 43, 23, 23, 51]} df = pd.DataFrame(raw_data, columns = [&amp;#39;officer_name&amp;#39;, &amp;#39;jan_arrests&amp;#39;, &amp;#39;feb_arrests&amp;#39;, &amp;#39;march_arrests&amp;#39;]) df    officer_name jan_arrests feb_arrests march_arrests     0 Jason 4 25 5   1 Molly 24 94 43   2 Tina 31 57 23   3 Jake 2 62 23   4 Amy 3 70 51     # Create a column with the total arrests for each officer df[&amp;#39;total_arrests&amp;#39;] = df[&amp;#39;jan_arrests&amp;#39;] + df[&amp;#39;feb_arrests&amp;#39;] + df[&amp;#39;march_arrests&amp;#39;] df    officer_name jan_arrests feb_arrests march_arrests total_arrests     0 Jason 4 25 5 34   1 Molly 24 94 43 161   2 Tina 31 57 23 111   3 Jake 2 62 23 87   4 Amy 3 70 51 124     Make plot # Create a list of colors (from iWantHue) colors = [&amp;#34;#E13F29&amp;#34;, &amp;#34;#D69A80&amp;#34;, &amp;#34;#D63B59&amp;#34;, &amp;#34;#AE5552&amp;#34;, &amp;#34;#CB5C3B&amp;#34;, &amp;#34;#EB8076&amp;#34;, &amp;#34;#96624E&amp;#34;] # Create a pie chart plt.</description>
    </item>
    
  </channel>
</rss>